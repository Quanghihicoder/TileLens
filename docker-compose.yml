version: "3.8"

services:
  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - ./frontend/.env:/app/.env
      - /app/node_modules
    working_dir: /app
    command: npm run dev -- --host
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    command: npm start
    depends_on:
      - mysql
      - mongodb
      - redis
    env_file:
      - ./backend/.env

  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tilelens
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  mongodb:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  worker-tiling-image:
    build: ./worker/tiling_image
    volumes:
      - ./backend/assets:/app/assets
    depends_on:
      - redis
      - mongodb
    command: npm start
    deploy:
      replicas: 1
    env_file:
      - ./worker/tiling_image/.env

  worker-clipping-image:
    build: ./worker/clipping_image
    volumes:
      - ./backend/assets:/app/assets
    depends_on:
      - redis
      - mongodb
    command: npm start
    deploy:
      replicas: 1
    env_file:
      - ./worker/clipping_image/.env

  worker-blending-image:
    build: ./worker/blending_image
    volumes:
      - ./backend/assets:/app/assets
    depends_on:
      - redis
      - mongodb
    command: npm start
    deploy:
      replicas: 1
    env_file:
      - ./worker/blending_image/.env

volumes:
  mysql_data:
  mongodb_data:
