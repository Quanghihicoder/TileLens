# name: Apply changes to Production

# on:
#   # push:
#   #   branches:
#   #     - production
#   pull_request:
#     branches:
#       - production
#     types: [closed]
#     if: github.event.pull_request.merged == true

# jobs:
#   terraform-apply:
#     name: Terraform Apply
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4
#       - uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-2
#       - uses: hashicorp/setup-terraform@v3

#       - name: Run apply script
#         env:
#           TF_VAR_hosted_zone_id: ${{ secrets.TF_VAR_HOSTED_ZONE_ID }}
#           TF_VAR_cloudfront_acm_certificate_arn: ${{ secrets.TF_VAR_ACM_CERTIFICATE_ARN }}
#           TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
#           TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
#           TF_VAR_backend_image_url: ${{ vars.TF_VAR_BACKEND_IMAGE_URL }}
#           TF_VAR_transcriber_image_url: ${{ vars.TF_VAR_TRANSCRIBER_IMAGE_URL }}
#         run: |
#           cd ./devops
#           chmod +x apply.sh
#           ./apply.sh

#   trigger-aws-pipeline:
#     name: Trigger AWS Pipeline
#     needs: terraform-apply
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4
#       - uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-2
#       - uses: hashicorp/setup-terraform@v3

#       - name: Trigger AWS Pipeline
#         run: aws codepipeline start-pipeline-execution --name tilelens-pipeline
